# Remove fish greeting
set fish_greeting

#
## ALIASES
#

# Quick aliases
command -q vim; and alias v='vim'
command -q nvim; and alias v='nvim'
command -q helix; and alias h='helix'
command -q codium; and alias code='codium'
command -q windsurf; and alias ws='windsurf'
command -q paru; and alias p='paru'
command -q jump; and alias j='jump'

# Paru aliases
command -q paru; and alias ps='paru -S'             # Install
command -q paru; and alias pr='paru -Rns'           # Remove package and its dependencies
command -q paru; and alias psi='paru -Si'           # Get detailed information about a package
command -q paru; and alias pq='paru -Q'             # Query package database
command -q paru; and alias pyc='paru -Sc'           # Clean package cache
command -q paru; and alias pycc='paru -Scc'         # Clean all package cache
command -q paru; and alias pyao='paru -Qtd'         # List orphaned packages
command -q paru; and alias pyro='paru -Rns (paru -Qtdq)' # Remove orphaned packages
# Unified paru cleanup function
function paclean
    paru -Sc
    set orphans (paru -Qtdq)
    if test (count $orphans) -gt 0
        paru -Rns $orphans
    end
end

alias rename='perl-rename'
alias ka='killall'
alias ipa='curl ifconfig.me'
alias se='sudoedit'
alias df='df -h'
alias dus='du -sh'
alias fdd='fd -ui'
alias free='free -m'


# Ls
alias ls='lsd --group-dirs first --hyperlink auto' # shows directories first
alias l='ls -l' # detailed ls
alias la='ls -A' # ls with hidden files
alias ll='ls -lA' # detailed ls with hidden files
alias lt='ls --tree'
alias lta='lt -A'

# Kitty
[ "$TERM" = "xterm-kitty" ] && alias s="kitty +kitten ssh"
[ "$TERM" = "xterm-kitty" ] && alias d="kitty +kitten diff"
[ "$TERM" = "xterm-kitty" ] && alias icat="kitty +kitten icat"
[ "$TERM" = "xterm-kitty" ] && alias g="kitty +kitten hyperlinked_grep"


# Git related
alias gitpullrecursive='find . -type d -name .git -exec sh -c "cd \"{}\"/../ && pwd && git pull" \;'
alias gcl='git clone'
alias gps='git push'
alias gpl='git pull'
alias gst='git status -s'
alias gstt='git status'
alias gsm='git submodule'
alias gad='git add'
alias gdf='git diff'
alias gdd="git difftool --no-symlinks --dir-diff"
alias gcm='git commit -m'
alias gchm='git commit --amend -m'
alias gls='git ls-files'
alias glsn='git ls-files | wc -l'
alias gco='git checkout'
alias gbr="git branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate"
alias glg='git log --oneline --graph | head -n 15'
alias glgg='git log --oneline --graph'
#git log --pretty=format:"%C(yellow)%h %Creset%s %Cblue[%cn]"
alias glgd='git log --pretty=format:"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]" --decorate --date=short'
alias glga='git log --pretty=format:"%C(yellow)%h %ad%Cred%d | %Creset%s%Cblue [%cn]" --decorate --date=short'
alias glgr='git log --pretty=format:"%C(yellow)%h %ad%Cred%d | %Creset%s%Cblue [%cn]" --decorate --date=relative'
alias glgc='git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'

function pr_template
    begin
        echo -e "\n## üîë Key Changes"; \
        git log master..HEAD --oneline | grep -E "feat|fix|BREAKING CHANGE" | sed 's/^/- /'; \
        echo -e "\n## üìÅ Areas Affected"; \
        git diff --name-status master...HEAD | sed 's/^/- /'; \
        echo -e "\n## üìù Additional Notes"; \
        git log master..HEAD --format="%B" | grep -i "^note:" | sed 's/^Note: *//i' | sed 's/^/- /'; \
        echo -e "\n## ÔøΩÔøΩ Related Issues/PRs"; \
        git log master..HEAD --oneline | grep -o '#[0-9]\+' | sort -u | sed 's/^/- Issue /'
    end | copyfile
end


# chezmoi
alias cz='chezmoi'
alias cad='cz add'
alias ced='cz edit --apply'
alias cedit='cz edit'
alias cdf='cz diff'
alias cst='cz status'
alias czu='cz update'


{{- if eq .osid "linux-arch" }}
function z
	set tmp (mktemp -t "yazi-cwd.XXXXXX")
	yazi $argv --cwd-file="$tmp"
	if set cwd (command cat -- "$tmp"); and [ -n "$cwd" ]; and [ "$cwd" != "$PWD" ]
		builtin cd -- "$cwd"
	end
	rm -f -- "$tmp"
end

# File search in package database
alias yf='y -Fy'

# Query package that owns a file
alias yq='y -Qo'

# Install a package
alias ys='y -S'

# Search for a package
alias yss='y -Ss'

# Remove a package and its dependencies
alias yr='y -Rcn'
alias yrr='y -Rcns'
alias yrrr='y -Rcnss'

# Update system and AUR packages
alias yy='y -Syu --sudoloop --noconfirm'

# Clean unneeded dependencies
alias yo='y -Yc'

# Clean package cache
alias yc='y -Sc'

# Clean all package cache
alias ycc='y -Scc'

# List orphaned packages
alias yao='yay -Qtd'

# Remove orphaned packages
alias yro='yay -Rns $(yay -Qtdq)'

# Get detailed information about a package
alias yi='yay -Si'

# List files owned by a package
alias ylf='yay -Ql'

# Check for outdated AUR packages
alias yau='yay -Qua'

# Show package dependency tree
alias ydt='yay -Qi'

# Function to display alias descriptions
function yay_help
    echo "Yay Alias Descriptions:"
    echo "y    - Basic yay command"
    echo "yf   - File search in package database"
    echo "yq   - Query package that owns a file"
    echo "ys   - Install a package"
    echo "yss  - Search for a package"
    echo "yr   - Remove a package and its dependencies"
    echo "yy   - Update system and AUR packages"
    echo "yo   - Clean unneeded dependencies"
    echo "yc   - Clean package cache"
    echo "ycc  - Clean all package cache"
    echo "yao  - List orphaned packages"
    echo "yro  - Remove orphaned packages"
    echo "yi   - Get detailed information about a package"
    echo "ylf  - List files owned by a package"
    echo "yau  - Check for outdated AUR packages"
    echo "ydt  - Show package dependency tree"
end

# Alias for the help function
alias yhelp='yay_help'

# pacman
alias unlock_pacman='sudo rm /var/lib/pacman/db.lck'
alias unlock_sudo='faillock --user $USER --reset'
alias pacman_cache='paccache -ruvk 0 && paccache -rvk 2'
alias pacman_orphaned='sudo pacman -Rns (pacman -Qtdq)' # Remove orphaned packages
alias update-mirrors='sudo reflector --country France,Germany,Belgium,Luxembourg,Switzerland,Italy,Spain,Netherlands,Sweden --latest 20 --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist && sudo pacman -Syy'


# systemctl
alias senable='sudo systemctl enable'
alias sdisable='sudo systemctl disable'
alias sstart='sudo systemctl start'
alias srstart='sudo systemctl restart'
alias sstop='sudo systemctl stop'
alias sstatus='sudo systemctl status'
alias slist='systemctl list-unit-files --state=enabled'

# yt-dlp
alias ytd='yt-dlp'
# audio-only 
alias yta='yt-dlp --config-location ~/.config/yt-dlp/audio-config'

# Misc
alias conda_init='eval "$(/home/maplepy/.miniconda3/bin/conda shell.fish hook)"'
{{- end }}
alias cleanemptydir='find . -type d -empty -delete' # remove empty directories

#
## EXPORTS
#

{{- if eq .osid "linux-arch" }}
export EDITOR='vim'
export VISUAL='vim'
export SUDO_EDITOR=$EDITOR
#export MANPAGER='nvim +Man!'
export MANWIDTH=999
{{- else if eq .osid "linux-ubuntu" }}
export LD_LIBRARY_PATH="$HOME/sgoinfre/lib:$LD_LIBRARY_PATH"

# Generated for envman. Do not edit.
test -s "$HOME/.config/envman/load.fish"; and source "$HOME/.config/envman/load.fish"
{{- end }}

## Jump 
function __jump_add --on-variable PWD
  status --is-command-substitution; and return
  jump chdir
end

function __jump_hint
  set -l term (string replace -r '^j ' '' -- (commandline -cp))
  jump hint "$term"
end

function j
  set -l dir (jump cd "$argv")
  test -d "$dir"; and cd "$dir"
end

complete --command j --exclusive --arguments '(__jump_hint)'
