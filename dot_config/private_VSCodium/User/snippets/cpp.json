{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Main without args": {
		"prefix": "main",
		"body": [
			"int main() {",
			"	$1",
			"	return 0;",
			"}"
		],
		"description": "Main without args"
	},
	"Create class hpp": {
		"prefix": "class-hpp",
		"body": [
			"#ifndef ${1:CLASSNAME}_HPP",
			"# define ${1:CLASSNAME}_HPP",
			"",
			"class ${1:CLASSNAME}",
			"{",
			"	public:",
			"		${1:CLASSNAME}();",
			"		${1:CLASSNAME}(const ${1:CLASSNAME} & src);",
			"		~${1:CLASSNAME}();",
			"		${1:CLASSNAME} & operator=(const ${1:CLASSNAME} & rhs);",
			"",
			"	private:",
			"",
			"};",
			"",
			"#endif"
		],
		"description": "Create class hpp"
	},
}
