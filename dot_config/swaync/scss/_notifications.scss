@use "sass:color";
@use "variables" as *;

// Notification variant mixin for maintainability
@mixin notification-variant(
    $bg,
    $color,
    $border-color,
    $hover-bg,
    $hover-color,
    $hover-shadow: null
) {
    background-color: rgba($bg, $notification-alpha);
    color: $color;
    border: $border $border-color;

    .notification-default-action:hover {
        background-color: $hover-bg;
        color: $hover-color;
        @if $hover-shadow != null {
            box-shadow: $hover-shadow;
        }
    }
}

@mixin button-base {
    border-radius: $border-radius;
    border: none;
    font-family: $font-family;
    transition: $transition-all;
    box-shadow: none;
    text-shadow: none;
    /* padding: 0.5em 1em; */
    /* background: transparent; */
    /* color: inherit; */
}

.close-button {
    /* The notification close button */
    @include button-base;
    background-color: transparent;
    /* background-color: $primary_container; */
    color: $on_primary_container;
    padding: 0;

    &:hover {
        background-color: $primary_fixed_dim;
        color: $on_primary_fixed;
    }
}

.floating-notifications {
    background: transparent;

    .notification {
        box-shadow: none;
    }
}

.notification-row {
    background: transparent;
    outline: none;

    &:focus {
        background: yellowgreen;
    }
    .notification-background {
        padding: $notification-background-py $notification-background-px;

        .notification {
            /* Notification container */
            border-radius: $border-radius;
            border: $border $surface_bright;
            font-family: $font-family;
            transition: $transition-all;

            &.critical {
                @include notification-variant(
                    $error_container,
                    $on_error_container,
                    $error_container,
                    color.adjust($error_container, $lightness: 2%),
                    $on_error_container
                );
            }

            &.normal {
                @include notification-variant(
                    $surface,
                    inherit,
                    $surface_bright,
                    $surface_container,
                    $on_surface,
                    0 0 16px 2px $surface
                );
            }

            &.low {
                @include notification-variant(
                    $surface_container,
                    inherit,
                    $surface_bright,
                    $surface_container_high,
                    $on_surface_variant,
                    0 0 16px 2px $surface_variant
                );
            }

            .text-button {
                color: $primary;
                font-weight: bold;
            }

            .notification-default-action {
                /* The large action that also displays the notification summary and body */
                &:not(:only-child) {
                    /* when there are actions */
                    border-bottom-left-radius: 0px;
                    border-bottom-right-radius: 0px;
                }

                .notification-content {
                    padding: $margin;

                    .image {
                        /* Primary image */
                        margin-right: $margin-lg;
                        border-radius: $border-radius-sm;
                    }
                    .app-icon {
                        /* Notification app icon (only visible when the primary image is set) */
                    }

                    .text-box {
                        .summary {
                            font-size: $font-size;
                            font-weight: bold;
                            color: $on_surface;
                        }

                        .body {
                            font-weight: normal;
                            color: $on_surface_variant;
                            margin-top: $margin;
                        }

                        .time {
                            /* notification time-ago */
                            font-size: $font-size;
                            color: $on_surface_variant;
                        }
                    }

                    progressbar {
                        /* The optional notification progress bar */
                        trough {
                            background: $surface_variant;
                            border-radius: $border-radius;
                            min-height: $progressbar-height;
                        }
                        progress {
                            background: $primary;
                            border-color: $primary_fixed;
                            border: 0;
                            border-radius: $border-radius;
                            min-height: $progressbar-height;
                        }
                    }

                    .body-image {
                        /* The "extra" optional bottom notification image */
                        margin-top: $margin;
                        background-color: cornflowerblue;
                    }

                    // TODO check this
                    .inline-reply {
                        /* The inline reply section */
                        margin-top: $margin;

                        .inline-reply-entry {
                            background: $surface_container;
                            color: $on_surface;
                            caret-color: $on_surface;
                            border: $border;
                            border-radius: $border-radius;
                        }

                        .inline-reply-button {
                            margin-left: calc($margin / 2);
                            margin-top: 0;
                            margin-bottom: 0;
                            padding: 0;
                            border-radius: $border-radius;
                            background: $surface_container;
                            color: $on_surface;

                            &:hover {
                                background: $surface_container_high;
                            }
                        }
                    }
                }
            }

            .notification-action {
                /* The alternative notification actions (buttons) */
                // background-color: $surface;
                padding: 0;

                &:hover {
                    background: $surface_container;
                    color: $primary_fixed;
                    transition: $transition-all;
                }
            }
        }
    }
}
